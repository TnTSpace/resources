// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";
import { defaultOptions } from "./config";

const tables = [
  {
    name: "cart",
    checkConstraints: {
      cart_xata_id_length_xata_id: {
        name: "cart_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      product_link: {
        name: "product_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "user",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_cart_xata_id_key: {
        name: "_pgroll_new_cart_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "colorOrdered",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "quantityOrdered",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: "1",
        comment: "",
      },
      {
        name: "sizeOrdered",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"user"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "category",
    checkConstraints: {
      category_xata_id_length_xata_id: {
        name: "category_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      banner_link: {
        name: "banner_link",
        columns: ["banner"],
        referencedTable: "image",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      thumbnail_link: {
        name: "thumbnail_link",
        columns: ["thumbnail"],
        referencedTable: "image",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_category_xata_id_key: {
        name: "_pgroll_new_category_xata_id_key",
        columns: ["xata_id"],
      },
      category_name_unique: { name: "category_name_unique", columns: ["name"] },
    },
    columns: [
      {
        name: "banner",
        type: "link",
        link: { table: "image" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"image"}',
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "thumbnail",
        type: "link",
        link: { table: "image" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"image"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "image",
    checkConstraints: {
      image_xata_id_length_xata_id: {
        name: "image_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_image_xata_id_key: {
        name: "_pgroll_new_image_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "fileId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "url",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "order",
    checkConstraints: {
      order_xata_id_length_xata_id: {
        name: "order_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "user",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_order_xata_id_key: {
        name: "_pgroll_new_order_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "address",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "amount",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isPaid",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "phone",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "products",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "reference",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shippingAmount",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shippingLocation",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shippingType",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"user"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "order_item",
    checkConstraints: {
      order_item_xata_id_length_xata_id: {
        name: "order_item_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      orderId_link: {
        name: "orderId_link",
        columns: ["order"],
        referencedTable: "order",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      productId_link: {
        name: "productId_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "user",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_order_item_xata_id_key: {
        name: "_pgroll_new_order_item_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "color",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "image",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "order",
        type: "link",
        link: { table: "order" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"order"}',
      },
      {
        name: "price",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "quantity",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "reference",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "size",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"user"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "product",
    checkConstraints: {
      product_xata_id_length_xata_id: {
        name: "product_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      categoryId_link: {
        name: "categoryId_link",
        columns: ["category"],
        referencedTable: "category",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      next_link: {
        name: "next_link",
        columns: ["next"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      thumbnail_link: {
        name: "thumbnail_link",
        columns: ["thumbnail"],
        referencedTable: "image",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_product_xata_id_key: {
        name: "_pgroll_new_product_xata_id_key",
        columns: ["xata_id"],
      },
      product__pgroll_new_sku_key: {
        name: "product__pgroll_new_sku_key",
        columns: ["sku"],
      },
    },
    columns: [
      {
        name: "category",
        type: "link",
        link: { table: "category" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"category"}',
      },
      {
        name: "colors",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "images",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isArchived",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isFeatured",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "next",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "oldPrice",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "price",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "rating",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sizes",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sku",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stock",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: "1",
        comment: "",
      },
      {
        name: "tags",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "thumbnail",
        type: "link",
        link: { table: "image" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"image"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "product_image",
    checkConstraints: {
      product_image_xata_id_length_xata_id: {
        name: "product_image_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      image_link: {
        name: "image_link",
        columns: ["image"],
        referencedTable: "image",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      product_link: {
        name: "product_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_product_image_xata_id_key: {
        name: "_pgroll_new_product_image_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "image",
        type: "link",
        link: { table: "image" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"image"}',
      },
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "recently_viewed",
    checkConstraints: {
      recently_viewed_xata_id_length_xata_id: {
        name: "recently_viewed_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      product_link: {
        name: "product_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "user",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_recently_viewed_xata_id_key: {
        name: "_pgroll_new_recently_viewed_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "user",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"user"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "review",
    checkConstraints: {
      reviews_xata_id_length_xata_id: {
        name: "reviews_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      productId_link: {
        name: "productId_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_reviews_xata_id_key: {
        name: "_pgroll_new_reviews_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "comment",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "reviewer",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "score",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "shipping",
    checkConstraints: {
      shipping_xata_id_length_xata_id: {
        name: "shipping_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_shipping_xata_id_key: {
        name: "_pgroll_new_shipping_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "country",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "express",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "expressNote",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "location",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "miscellaneous",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "standard",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "standardNote",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "state",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "{}",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "size",
    checkConstraints: {
      size_xata_id_length_xata_id: {
        name: "size_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      category_link: {
        name: "category_link",
        columns: ["category"],
        referencedTable: "category",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_size_xata_id_key: {
        name: "_pgroll_new_size_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "category",
        type: "link",
        link: { table: "category" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"category"}',
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "value",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "tag",
    checkConstraints: {
      tag_xata_id_length_xata_id: {
        name: "tag_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_tag_xata_id_key: {
        name: "_pgroll_new_tag_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "code",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "user",
    checkConstraints: {
      user_xata_id_length_xata_id: {
        name: "user_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_user_xata_id_key: {
        name: "_pgroll_new_user_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "firstName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "image",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "lastName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "nameTag",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "role",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "userId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "widget",
    checkConstraints: {
      widget_xata_id_length_xata_id: {
        name: "widget_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_widget_xata_id_key: {
        name: "_pgroll_new_widget_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "position",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "subline",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "url",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "widget_item",
    checkConstraints: {
      widget_item_xata_id_length_xata_id: {
        name: "widget_item_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      banner_link: {
        name: "banner_link",
        columns: ["banner"],
        referencedTable: "image",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      product_link: {
        name: "product_link",
        columns: ["product"],
        referencedTable: "product",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      widget_link: {
        name: "widget_link",
        columns: ["widget"],
        referencedTable: "widget",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_widget_item_xata_id_key: {
        name: "_pgroll_new_widget_item_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "banner",
        type: "link",
        link: { table: "image" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"image"}',
      },
      {
        name: "col",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product",
        type: "link",
        link: { table: "product" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"product"}',
      },
      {
        name: "row",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "widget",
        type: "link",
        link: { table: "widget" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"widget"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Cart = InferredTypes["cart"];
export type CartRecord = Cart & XataRecord;

export type Category = InferredTypes["category"];
export type CategoryRecord = Category & XataRecord;

export type Image = InferredTypes["image"];
export type ImageRecord = Image & XataRecord;

export type Order = InferredTypes["order"];
export type OrderRecord = Order & XataRecord;

export type OrderItem = InferredTypes["order_item"];
export type OrderItemRecord = OrderItem & XataRecord;

export type Product = InferredTypes["product"];
export type ProductRecord = Product & XataRecord;

export type ProductImage = InferredTypes["product_image"];
export type ProductImageRecord = ProductImage & XataRecord;

export type RecentlyViewed = InferredTypes["recently_viewed"];
export type RecentlyViewedRecord = RecentlyViewed & XataRecord;

export type Review = InferredTypes["review"];
export type ReviewRecord = Review & XataRecord;

export type Shipping = InferredTypes["shipping"];
export type ShippingRecord = Shipping & XataRecord;

export type Size = InferredTypes["size"];
export type SizeRecord = Size & XataRecord;

export type Tag = InferredTypes["tag"];
export type TagRecord = Tag & XataRecord;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Widget = InferredTypes["widget"];
export type WidgetRecord = Widget & XataRecord;

export type WidgetItem = InferredTypes["widget_item"];
export type WidgetItemRecord = WidgetItem & XataRecord;

export type DatabaseSchema = {
  cart: CartRecord;
  category: CategoryRecord;
  image: ImageRecord;
  order: OrderRecord;
  order_item: OrderItemRecord;
  product: ProductRecord;
  product_image: ProductImageRecord;
  recently_viewed: RecentlyViewedRecord;
  review: ReviewRecord;
  shipping: ShippingRecord;
  size: SizeRecord;
  tag: TagRecord;
  user: UserRecord;
  widget: WidgetRecord;
  widget_item: WidgetItemRecord;
};

const DatabaseClient = buildClient();

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
